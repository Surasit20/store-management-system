[{"C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\index.js":"1","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\App.js":"2","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\user\\receipt_user.jsx":"3","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\user\\home_user.jsx":"4","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\user\\index_user.jsx":"5","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\user\\pay_user.jsx":"6","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\user\\repair_user.jsx":"7","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\home\\home.jsx":"8","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\daily_summary.jsx":"9","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\home_admin.jsx":"10","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\chassis_admin.jsx":"11","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\payment_check_admin.jsx":"12","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\overdue_admin.jsx":"13","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\index_admin.jsx":"14","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\login\\login.jsx":"15","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\motorcycle_add.jsx":"16","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\motorcycle_info_admin.jsx":"17","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\motorcycle_update.jsx":"18","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\user\\user_info.jsx":"19","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\user\\user_update.jsx":"20","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\repair\\repair_info_admin.jsx":"21","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\login\\register.jsx":"22","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\component\\card_car.jsx":"23"},{"size":3144,"mtime":1690987887952,"results":"24","hashOfConfig":"25"},{"size":905,"mtime":1691419367060,"results":"26","hashOfConfig":"25"},{"size":169,"mtime":1691506123399,"results":"27","hashOfConfig":"25"},{"size":1666,"mtime":1691590184939,"results":"28","hashOfConfig":"25"},{"size":4445,"mtime":1691507577140,"results":"29","hashOfConfig":"25"},{"size":6464,"mtime":1691682054391,"results":"30","hashOfConfig":"25"},{"size":170,"mtime":1691506123399,"results":"31","hashOfConfig":"25"},{"size":1382,"mtime":1690383374664,"results":"32","hashOfConfig":"25"},{"size":157,"mtime":1690044615140,"results":"33","hashOfConfig":"25"},{"size":133,"mtime":1690044783523,"results":"34","hashOfConfig":"25"},{"size":10854,"mtime":1691418576728,"results":"35","hashOfConfig":"25"},{"size":157,"mtime":1690044667007,"results":"36","hashOfConfig":"25"},{"size":141,"mtime":1690045814526,"results":"37","hashOfConfig":"25"},{"size":8036,"mtime":1691589797101,"results":"38","hashOfConfig":"25"},{"size":5230,"mtime":1691508318928,"results":"39","hashOfConfig":"25"},{"size":5972,"mtime":1690987597316,"results":"40","hashOfConfig":"25"},{"size":7787,"mtime":1690984301194,"results":"41","hashOfConfig":"25"},{"size":8456,"mtime":1690984301194,"results":"42","hashOfConfig":"25"},{"size":6091,"mtime":1690984301195,"results":"43","hashOfConfig":"25"},{"size":8611,"mtime":1690984301195,"results":"44","hashOfConfig":"25"},{"size":18437,"mtime":1691418576729,"results":"45","hashOfConfig":"25"},{"size":13258,"mtime":1691506135227,"results":"46","hashOfConfig":"25"},{"size":2101,"mtime":1691590183369,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},"uq0p0j",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"52"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"52"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"52"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"52"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"52"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\index.js",["132","133"],[],"import React, { useState, createContext }  from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Home from './home/home';\r\nimport App from './App';\r\nimport Login from './login/login';\r\nimport Register from './login/register';\r\nimport {createBrowserRouter,RouterProvider,} from \"react-router-dom\";\r\n\r\n//user\r\nimport  IndexUser from './user/index_user';\r\nimport  HomeUser from './user/home_user';\r\nimport  PayUser from './user/pay_user';\r\nimport  ReceiptUser from './user/receipt_user';\r\nimport  RepairUser from './user/repair_user';\r\n\r\n//admin\r\nimport IndexAdmin from './admin/index_admin';\r\nimport ChassisAdmin from './admin/chassis_admin';\r\nimport DailySummaryAdmin from './admin/daily_summary';\r\nimport HomeAdmin from './admin/home_admin';\r\nimport MotorcycleInfoAdmin from './admin/motorcycle_info_admin';\r\nimport OverdueAdmin from './admin/overdue_admin';\r\nimport PaymentCheckAdmin from './admin/payment_check_admin';\r\nimport RepairInfoAdmin from './admin/repair/repair_info_admin';\r\nimport AddMotorcycle from './admin/motorcycle_add';\r\nimport UpdateMotorcycle from './admin/motorcycle_update';\r\nimport UserInfoAdmin from './admin/user/user_info';\r\nimport UserUpdateAdmin from './admin/user/user_update'\r\nconst router = createBrowserRouter([\r\n  {\r\n  //home\r\n    path: \"/\",\r\n    element: <App/>,\r\n    children: [\r\n      {\r\n        path: \"/\",\r\n        element: <Home />,\r\n      },\r\n      {\r\n        path: \"login\",\r\n        element: <Login />,\r\n      },\r\n      {\r\n        path: \"register\",\r\n        element: <Register />,\r\n      }\r\n    ],\r\n  },\r\n//user\r\n  {\r\n    path: \"/user\",\r\n    \r\n    element: <IndexUser/>,\r\n    children: [\r\n      {\r\n        path: \"/user/home\",\r\n        element: <HomeUser/>,\r\n      },\r\n      {\r\n        path: \"/user/pay\",\r\n        element: <PayUser />,\r\n      },\r\n      {\r\n        path: \"/user/receipt\",\r\n        element: <ReceiptUser />,\r\n      },\r\n      {\r\n        path: \"/user/repair\",\r\n        element: <RepairUser />,\r\n      }\r\n    ],\r\n  },\r\n\r\n//admin\r\n{\r\n  path: \"/admin\",\r\n  element: <IndexAdmin/>,\r\n  children: [\r\n    {\r\n      path: \"/admin/daily-summary\",\r\n      element: <DailySummaryAdmin/>,\r\n    },\r\n    {\r\n      path: \"/admin/home\",\r\n      element: <HomeAdmin/>,\r\n    },\r\n    {\r\n      path: \"/admin/motorcycle\",\r\n      element: <MotorcycleInfoAdmin/>,\r\n    },\r\n    {\r\n      path: \"/admin/overdue\",\r\n      element: <OverdueAdmin />,\r\n    },\r\n    {\r\n      path: \"/admin/payment-check\",\r\n      element: <PaymentCheckAdmin />,\r\n    },\r\n    {\r\n      path: \"/admin/repair/repair-info\",\r\n      element: <RepairInfoAdmin />,\r\n    },\r\n    {\r\n      path: \"/admin/chassis\",\r\n      element: <ChassisAdmin/>,\r\n    },\r\n    {\r\n      path : \"/admin/add-motorcycle\",\r\n      element : <AddMotorcycle/>\r\n    },\r\n    {\r\n      path : \"/admin/update-motorcycle/:MOTORCYCLE_ID\",\r\n      element : <UpdateMotorcycle/>\r\n    },\r\n    {\r\n      path : \"/admin/user/user-info\",\r\n      element : <UserInfoAdmin/>\r\n    },\r\n    {\r\n      path : \"/admin/user/user-update/:USER_ID\",\r\n      element : <UserUpdateAdmin/>\r\n    }\r\n\r\n  ],\r\n},\r\n]);\r\n\r\nReactDOM.render(\r\n  <RouterProvider router={router} />,\r\n  document.getElementById('root')\r\n);\r\n",[],"C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\App.js",["134","135","136","137","138"],[],"import React, { useState, createContext }  from 'react';\nimport './App.css';\nimport Home from './home/home';\nimport Login from './login/login';\nimport { Outlet } from \"react-router-dom\";\n\nfunction App(){\n\n  return(\n\n    <div className='App'>\n       <div>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark navbar-height\">\n                <div className=\"container-fluid\">\n                <div className=\"navbar-collapse justify-content-center\">\n                <a className=\"navbar-brand\" href='/'>\n                        <p className = \"header-navber\">\n                            <a>ร้านรถจักรยานยนต์มือ 2</a>\n                        </p>\n                    </a>\n                 </div> \n                </div>\n            </nav>\n        </div>\n\n        <div id=\"detail\">\n        <Outlet />\n      </div>\n    </div>\n\n  )\n}export default App;","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\user\\receipt_user.jsx",["139"],[],"C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\user\\home_user.jsx",["140","141","142","143"],[],"C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\user\\index_user.jsx",["144","145","146","147","148","149","150"],[],"C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\user\\pay_user.jsx",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],[],"C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\user\\repair_user.jsx",["169"],[],"C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\home\\home.jsx",["170","171","172","173"],[],"/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-restricted-globals */\r\nimport React, { Component } from \"react\";\r\n//import { Navigate } from 'react-router-dom';\r\nimport \"./home.css\";\r\nimport Login from \"../login/login\";\r\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\r\n\r\nconst router = createBrowserRouter([\r\n  {\r\n    path: \"/\",\r\n    element: <Home />,\r\n  },\r\n  {\r\n    path: \"/home\",\r\n    element: <Home />,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    element: <Login />,\r\n  },\r\n]);\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg bg-custom-grey \">\r\n        <div className=\"container-fluid\">\r\n          <ul className=\"navbar-nav d-flex flex-row me-1\">\r\n            <li className=\"nav-item me-3 me-lg-0\">\r\n              <a className=\"nav-link text-back\">\r\n                <i className=\"fas fa-envelope mx-1\"></i>รถจักรยานยนต์\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <ul className=\"navbar-nav d-flex flex-row me-1\">\r\n            <li className=\"nav-item me-3 me-lg-0\">\r\n              <a className=\"nav-link text-back\" href=\"/login\">\r\n                <i className=\"fas fa-envelope mx-1\"></i>เข้าสู่ระบบ\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\daily_summary.jsx",["174"],[],"import React, { Component } from \"react\";\r\n\r\nfunction DailySummaryAdmin() {\r\n  return <div>DailySummaryAdmin</div>;\r\n}\r\n\r\nexport default DailySummaryAdmin;\r\n","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\home_admin.jsx",["175"],[],"import React, { Component } from \"react\";\r\n\r\nfunction HomeAdmin() {\r\n  return <div>HomeAdmin</div>;\r\n}\r\n\r\nexport default HomeAdmin;\r\n","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\chassis_admin.jsx",["176","177","178","179","180","181"],[],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./css/motorcycle_info.css\";\r\nimport \"./css_admin.css\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nexport default function ChassisAdmin() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [items, setItems] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  //const [RegistrationNumber, setRegistrationNumber] = useState(\"\");\r\n  const [UserId, setUserId] = useState(\"\");\r\n  const [motorcycleId, setMotorcycleId] = useState(\"\");\r\n  const [installmentNo,setinstallmentNo] = useState(\"\");\r\n  const[installmentMoney,setinstallmentMoney] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Promise.all([MotorcycleGet(), UserGet()])\r\n      .then(([motorcycles, users]) => {\r\n        const filteredItems = motorcycles.filter(\r\n          (item) => item.USER_ID == null\r\n        );\r\n        setItems(\r\n          filteredItems.map((item) => {\r\n            const user = users.find((u) => u.USER_ID === item.USER_ID);\r\n            return {\r\n              ...item,\r\n              USER_FULLNAME: user ? user.USER_FULLNAME : \"N/A\",\r\n            };\r\n          })\r\n        );\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const MotorcycleGet = () => {\r\n    return fetch(\"http://localhost:3001/api/v1/motorcycles\")\r\n      .then((res) => res.json())\r\n      .catch((error) => {\r\n        console.error(\"Error fetching motorcycles:\", error);\r\n        return [];\r\n      });\r\n  };\r\n  const UserGet = () => {\r\n    return fetch(\"http://localhost:3001/api/v1/users\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        return result.map((user) => ({\r\n          USER_ID: user.USER_ID,\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching users:\", error);\r\n        return [];\r\n      });\r\n  };\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n      USER_ID: UserId,\r\n      //MOTORCYCLE_REGISTRATION_NUMBER: RegistrationNumber,\r\n    });\r\n\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      `http://localhost:3001/api/v1/motorcycles/${motorcycleId}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.text())\r\n      .then((result) => {\r\n        console.log(result);\r\n        // Close the dialog and perform any necessary actions\r\n        handleClose();\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n      MOTORCYCLE_ID: motorcycleId,\r\n      INSTALLMENTS_NO: installmentNo,\r\n      INSTALLMENTS_MONEY: installmentMoney,\r\n    });\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\"http://localhost:3001/api/v1/installments\", requestOptions)\r\n      .then((response) => response.text())\r\n      .then((result) => console.log(result))\r\n      .catch((error) => console.log(\"error\", error));\r\n      window.location.reload();\r\n  };\r\n\r\n  const handleClickOpen = (MOTORCYCLE_ID) => {\r\n    setMotorcycleId(MOTORCYCLE_ID);\r\n    setOpen(true);\r\n    // ... remaining code ...\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [gotoAddMotorcycle, setGotoAddMotorcycle] = React.useState(false);\r\n  if (gotoAddMotorcycle) {\r\n    return <Navigate to=\"/admin/add-motorcycle\" />;\r\n  }\r\n  \r\n  return (\r\n    <diV>\r\n      <Row>\r\n        <div class=\"search\">\r\n          <Col>\r\n            <Form>\r\n              <InputGroup>\r\n                <Form.Control\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"ค้นหา\"\r\n                />\r\n              </InputGroup>\r\n            </Form>\r\n          </Col>\r\n        </div>\r\n        <div class=\"additem\">\r\n          <Col>\r\n            <button\r\n              class=\"btn btn-success btn-add-motor\"\r\n              onClick={() => {\r\n                setGotoAddMotorcycle(true);\r\n              }}\r\n            >\r\n              เพิ่มข้อมูล{\" \"}\r\n            </button>\r\n          </Col>\r\n        </div>\r\n      </Row>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n          <TableContainer sx={{ maxHeight: 440 }}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>เลขตัวถัง</TableCell>\r\n                  <TableCell>เลขทะเบียน</TableCell>\r\n                  <TableCell>ยืนยัน</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {items\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .filter((row) => {\r\n                    return (\r\n                      search.trim() === \"\" ||\r\n                      row.USER_FULLNAME.toLowerCase().includes(\r\n                        search.toLowerCase()\r\n                      ) ||\r\n                      row.MOTORCYCLE_BUCKET_NUMBER.toLowerCase().includes(\r\n                        search.toLowerCase()\r\n                      ) ||\r\n                      row.MOTORCYCLE_REGISTRATION_NUMBER.toLowerCase().includes(\r\n                        search.toLowerCase()\r\n                      )\r\n                    );\r\n                  })\r\n                  .map((row) => (\r\n                    <TableRow\r\n                      key={row.name}\r\n                      sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                    >\r\n                      <TableCell>{row.MOTORCYCLE_BUCKET_NUMBER}</TableCell>\r\n                      <TableCell>\r\n                        {row.MOTORCYCLE_REGISTRATION_NUMBER}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          type=\"button\"\r\n                          class=\"btn btn-warning\"\r\n                          variant=\"outlined\"\r\n                          onClick={() => handleClickOpen(row.MOTORCYCLE_ID)}\r\n                        >\r\n                          ยืนยัน\r\n                        </Button>\r\n                        <Dialog open={open} onClose={handleClose}>\r\n                          <DialogTitle>ยืนยันการเป็นเจ้าของรถ</DialogTitle>\r\n                          <DialogContent>\r\n                            <DialogContentText>\r\n                              กรอกข้อมูลผู้ใช้งานเพื่อทำการยืนยันการเป็นเจ้าของ\r\n                            </DialogContentText>\r\n                            <TextField\r\n                              id=\"UserId\"\r\n                              label=\"ไอดี\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              required\r\n                              onChange={(e) => setUserId(e.target.value)}\r\n                            ></TextField>\r\n                              <TextField\r\n                              id=\"installmentNo\"\r\n                              label=\"จำนวนงวด\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              required\r\n                              onChange={(e) => setinstallmentNo(e.target.value)}\r\n                            ></TextField>\r\n                              <TextField\r\n                              id=\"installmentMoney\"\r\n                              label=\"ราคางวดล้ะ\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              required\r\n                              onChange={(e) => setinstallmentMoney(e.target.value)}\r\n                            ></TextField>\r\n                          </DialogContent>\r\n                          <DialogActions>\r\n                            <Button onClick={handleSubmit}>แก้ไข</Button>\r\n                            <Button onClick={handleClose}>ยกเลิก</Button>\r\n                          </DialogActions>\r\n                        </Dialog>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={items.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            labelRowsPerPage=\"จำนวนแถวต่อหน้า:\"\r\n            labelDisplayedRows={({ from, to, count }) =>\r\n              `${from}-${to} จากทั้งหมด ${count}`\r\n            }\r\n          />\r\n        </Paper>\r\n      )}\r\n    </diV>\r\n  );\r\n}\r\n","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\payment_check_admin.jsx",["182"],[],"import React, { Component } from \"react\";\r\n\r\nfunction PaymentCheckAdmin() {\r\n  return <div>PaymentCheckAdmin</div>;\r\n}\r\n\r\nexport default PaymentCheckAdmin;\r\n","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\overdue_admin.jsx",["183"],[],"import React, { Component } from \"react\";\r\n\r\nfunction OverdueAdmin() {\r\n  return <div>OverdueUser</div>;\r\n}\r\n\r\nexport default OverdueAdmin;\r\n","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\index_admin.jsx",["184","185","186","187","188","189","190","191"],[],"C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\login\\login.jsx",["192","193","194","195","196","197","198","199","200","201","202","203","204"],[],"C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\motorcycle_add.jsx",["205","206","207","208","209","210","211","212","213","214"],[],"import React, { Component, useState, useEffect } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport { BrowserRouter, Routes, Route, useLocation } from \"react-router-dom\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Grid, TextField, Box, Button, Badge } from \"@mui/material\";\r\n\r\nfunction AddMotorcycle() {\r\n  const [RegistrationNumber, setRegistrationNumber] = useState(\"\");\r\n  const [BucketNumber, setBucketNumber] = useState(\"\");\r\n  const [Brand, setBrand] = useState(\"\");\r\n  const [Model, setModel] = useState(\"\");\r\n  const [Color, setColor] = useState(\"\");\r\n  const [Price, setPrice] = useState(\"\");\r\n  const [Balance, setBalance] = useState(\"\");\r\n  const [image, setImage] = useState();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var resUploadImage = await uploadImage();\r\n    if (!resUploadImage.error) {\r\n      var raw = JSON.stringify({\r\n        MOTORCYCLE_BALANCE: Balance,\r\n        MOTORCYCLE_PRICE: Price,\r\n        MOTORCYCLE_BRAND: Brand,\r\n        MOTORCYCLE_MODEL: Model,\r\n        MOTORCYCLE_COLOR: Color,\r\n        MOTORCYCLE_REGISTRATION_NUMBER: RegistrationNumber,\r\n        MOTORCYCLE_BUCKET_NUMBER: BucketNumber,\r\n        MOTORCYCLE_IMAGE: resUploadImage[\"secure_url\"],\r\n      });\r\n\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n\r\n      fetch(\"http://localhost:3001/api/v1/motorcycles/\", requestOptions)\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  };\r\n\r\n  const handleChangeImage = (event) => {\r\n    const newImage = event.target.files[0];\r\n    if (newImage) {\r\n      setImage(URL.createObjectURL(newImage));\r\n    }\r\n  };\r\n\r\n  const handleRemoceImage = (event) => {\r\n    setImage(\"\");\r\n  };\r\n\r\n  const uploadImage = async () => {\r\n    //setLoading(true);\r\n\r\n    //formData.append(\"cloud_name\", process.env.REACT_APP_CLOUDINARY_CLOUD_NAME);\r\n    //formData.append(\"folder\", \"Cloudinary-React\");\r\n    try {\r\n      const responseBlob = await fetch(image);\r\n      const blob = await responseBlob.blob();\r\n      const file = new File([blob], \"filename.jpg\", { type: \"image/jpeg\" });\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"upload_preset\", \"szopv83k\");\r\n\r\n      const response = await fetch(\r\n        `https://api.cloudinary.com/v1_1/dx59hbzcc/image/upload`,\r\n        {\r\n          method: \"POST\",\r\n          body: formData,\r\n        }\r\n      );\r\n      const res = await response.json();\r\n      return res;\r\n    } catch (error) {\r\n      console.log(error);\r\n      //setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"RegistrationNumber\"\r\n            label=\"เลขทะเบียน\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setRegistrationNumber(e.target.value)}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"BucketNumber\"\r\n            label=\"เลขตัวถัง\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setBucketNumber(e.target.value)}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Brand\"\r\n            label=\"ยี่ห้อ\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setBrand(e.target.value)}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Model\"\r\n            label=\"รุ่น\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setModel(e.target.value)}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Color\"\r\n            label=\"สี\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setColor(e.target.value)}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Price\"\r\n            label=\"ราคา\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Balance\"\r\n            label=\"ยอดคงเหลือ\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setBalance(e.target.value)}\r\n          ></TextField>\r\n        </Grid>\r\n        <div>\r\n          <Box\r\n            component=\"img\"\r\n            sx={{\r\n              height: 300,\r\n              width: 300,\r\n              borderColor: \"primary.main\",\r\n              borderRadius: \"50%\",\r\n              border: 15,\r\n            }}\r\n            src={image}\r\n          />\r\n\r\n          <Button onClick={handleRemoceImage}>ล้างรูป</Button>\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" component=\"label\">\r\n            Upload File\r\n            <input\r\n              accept=\"image/*\"\r\n              type=\"file\"\r\n              hidden\r\n              onChange={handleChangeImage}\r\n            />\r\n          </Button>\r\n        </div>\r\n\r\n        <button type=\"submit\" variant=\"contained\" class=\"btn btn-primary mb-3\">\r\n          บันทึก\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default AddMotorcycle;\r\n","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\motorcycle_info_admin.jsx",["215","216","217","218","219","220"],[],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport \"./css/motorcycle_info.css\";\r\nimport \"./css_admin.css\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nexport default function MotorcycleInfoAdmin() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [items, setItems] = useState([]);\r\n  const handleInputChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Promise.all([MotorcycleGet(), UserGet()])\r\n      .then(([motorcycles, users]) => {\r\n        const filteredItems = motorcycles.filter(\r\n          (item) => item.USER_ID !== null\r\n        );\r\n        setItems(\r\n          filteredItems.map((item) => {\r\n            const user = users.find((u) => u.USER_ID === item.USER_ID);\r\n            return {\r\n              ...item,\r\n              USER_FULLNAME: user ? user.USER_FULLNAME : \"N/A\",\r\n            };\r\n          })\r\n        );\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const MotorcycleGet = () => {\r\n    return fetch(\"http://localhost:3001/api/v1/motorcycles\")\r\n      .then((res) => res.json())\r\n      .catch((error) => {\r\n        console.error(\"Error fetching motorcycles:\", error);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  const UserGet = () => {\r\n    return fetch(\"http://localhost:3001/api/v1/users\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        return result.map((user) => ({\r\n          USER_ID: user.USER_ID,\r\n          USER_FULLNAME: user.USER_FULLNAME,\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching users:\", error);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  const MotorcycleDelete = (MOTORCYCLE_ID) => {\r\n    var requestOptions = {\r\n      method: \"DELETE\",\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      `http://localhost:3001/api/v1/motorcycles/${MOTORCYCLE_ID}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.text())\r\n      .then((result) => console.log(result))\r\n      .catch((error) => console.log(\"error\", error));\r\n    window.location.reload();\r\n  };\r\n\r\n  const MotorcycleUpdate = (MOTORCYCLE_ID) => {\r\n    window.location = \"/admin/update-motorcycle/\" + MOTORCYCLE_ID;\r\n  };\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [gotoAddMotorcycle, setGotoAddMotorcycle] = React.useState(false);\r\n  if (gotoAddMotorcycle) {\r\n    return <Navigate to=\"/admin/add-motorcycle\" />;\r\n  }\r\n\r\n  return (\r\n    <diV>\r\n      <Row>\r\n        <div class=\"search\">\r\n          <Col>\r\n            <Form>\r\n              <InputGroup>\r\n                <Form.Control\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"ค้นหา\"\r\n                />\r\n              </InputGroup>\r\n            </Form>\r\n          </Col>\r\n        </div>\r\n        <div class=\"additem\">\r\n          <Col>\r\n            <button\r\n              class=\"btn btn-success btn-add-motor\"\r\n              onClick={() => {\r\n                setGotoAddMotorcycle(true);\r\n              }}\r\n            >\r\n              เพิ่มข้อมูล{\" \"}\r\n            </button>\r\n          </Col>\r\n        </div>\r\n      </Row>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n          <TableContainer sx={{ maxHeight: 440 }}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>ชื่อลูกค้า</TableCell>\r\n                  <TableCell>เลขตัวถัง</TableCell>\r\n                  <TableCell>เลขทะเบียน</TableCell>\r\n                  <TableCell>แก้ไขข้อมูล</TableCell>\r\n                  <TableCell>ลบข้อมูล</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {items\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .filter((row) => {\r\n                    return (\r\n                      search.trim() === \"\" ||\r\n                      row.USER_FULLNAME.toLowerCase().includes(\r\n                        search.toLowerCase()\r\n                      ) ||\r\n                      row.MOTORCYCLE_BUCKET_NUMBER.toLowerCase().includes(\r\n                        search.toLowerCase()\r\n                      ) ||\r\n                      row.MOTORCYCLE_REGISTRATION_NUMBER.toLowerCase().includes(\r\n                        search.toLowerCase()\r\n                      )\r\n                    );\r\n                  })\r\n                  .map((row) => (\r\n                    <TableRow\r\n                      key={row.name}\r\n                      sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                    >\r\n                      <TableCell>{row.USER_FULLNAME}</TableCell>\r\n                      <TableCell>{row.MOTORCYCLE_BUCKET_NUMBER}</TableCell>\r\n                      <TableCell>\r\n                        {row.MOTORCYCLE_REGISTRATION_NUMBER}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          type=\"button\"\r\n                          class=\"btn btn-warning\"\r\n                          onClick={() => MotorcycleUpdate(row.MOTORCYCLE_ID)}\r\n                        >\r\n                          แก้ไข\r\n                        </Button>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          type=\"button\"\r\n                          class=\"btn btn-danger\"\r\n                          onClick={() => MotorcycleDelete(row.MOTORCYCLE_ID)}\r\n                        >\r\n                          ลบ\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={items.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            labelRowsPerPage=\"จำนวนแถวต่อหน้า:\"\r\n            labelDisplayedRows={({ from, to, count }) =>\r\n              `${from}-${to} จากทั้งหมด ${count}`\r\n            }\r\n          />\r\n        </Paper>\r\n      )}\r\n    </diV>\r\n  );\r\n}\r\n","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\motorcycle_update.jsx",["221","222","223","224","225","226","227","228","229","230","231","232"],[],"import React, { Component, useState, useEffect } from \"react\";\r\nimport \"../admin/css/motorcycle_update.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport { BrowserRouter, Routes, Route, useLocation } from \"react-router-dom\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Grid, TextField, Button, Box } from \"@mui/material\";\r\n\r\nfunction UpdateMotorcycle() {\r\n  const { MOTORCYCLE_ID } = useParams();\r\n  const [RegistrationNumber, setRegistrationNumber] = useState(\"\");\r\n  const [BucketNumber, setBucketNumber] = useState(\"\");\r\n  const [Brand, setBrand] = useState(\"\");\r\n  const [Model, setModel] = useState(\"\");\r\n  const [Color, setColor] = useState(\"\");\r\n  const [Price, setPrice] = useState(\"\");\r\n  const [Balance, setBalance] = useState(\"\");\r\n  const [imageOld, setImageOld] = useState();\r\n  const [imageNew, setImageNew] = useState();\r\n\r\n  useEffect(() => {\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      \"http://localhost:3001/api/v1/motorcycles/\" + MOTORCYCLE_ID,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result[\"status\"] == \"ok\") {\r\n          setRegistrationNumber(\r\n            result[\"result\"][\"MOTORCYCLE_REGISTRATION_NUMBER\"]\r\n          );\r\n          setBucketNumber(result[\"result\"][\"MOTORCYCLE_BUCKET_NUMBER\"]);\r\n          setBrand(result[\"result\"][\"MOTORCYCLE_BRAND\"]);\r\n          setModel(result[\"result\"][\"MOTORCYCLE_MODEL\"]);\r\n          setColor(result[\"result\"][\"MOTORCYCLE_COLOR\"]);\r\n          setPrice(result[\"result\"][\"MOTORCYCLE_PRICE\"]);\r\n          setBalance(result[\"result\"][\"MOTORCYCLE_BALANCE\"]);\r\n          setImageOld(result[\"result\"][\"MOTORCYCLE_IMAGE\"]);\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }, [MOTORCYCLE_ID]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (imageNew != null) {\r\n      console.log(\"case1\");\r\n      var resUploadImage = await uploadImage();\r\n      if (!resUploadImage.error) {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        var raw = JSON.stringify({\r\n          MOTORCYCLE_BALANCE: Balance,\r\n          MOTORCYCLE_PRICE: Price,\r\n          MOTORCYCLE_BRAND: Brand,\r\n          MOTORCYCLE_MODEL: Model,\r\n          MOTORCYCLE_COLOR: Color,\r\n          MOTORCYCLE_REGISTRATION_NUMBER: RegistrationNumber,\r\n          MOTORCYCLE_BUCKET_NUMBER: BucketNumber,\r\n          MOTORCYCLE_IMAGE: resUploadImage[\"secure_url\"],\r\n        });\r\n\r\n        var requestOptions = {\r\n          method: \"PUT\",\r\n          headers: myHeaders,\r\n          body: raw,\r\n          redirect: \"follow\",\r\n        };\r\n\r\n        fetch(\r\n          `http://localhost:3001/api/v1/motorcycles/${MOTORCYCLE_ID}`,\r\n          requestOptions\r\n        )\r\n          .then((response) => response.text())\r\n          .then((result) => console.log(result))\r\n          .catch((error) => console.log(\"error\", error));\r\n      }\r\n    } else {\r\n      console.log(\"case2\");\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      var raw = JSON.stringify({\r\n        MOTORCYCLE_BALANCE: Balance,\r\n        MOTORCYCLE_PRICE: Price,\r\n        MOTORCYCLE_BRAND: Brand,\r\n        MOTORCYCLE_MODEL: Model,\r\n        MOTORCYCLE_COLOR: Color,\r\n        MOTORCYCLE_REGISTRATION_NUMBER: RegistrationNumber,\r\n        MOTORCYCLE_BUCKET_NUMBER: BucketNumber,\r\n        MOTORCYCLE_IMAGE: imageOld,\r\n      });\r\n\r\n      var requestOptions = {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: \"follow\",\r\n      };\r\n\r\n      fetch(\r\n        `http://localhost:3001/api/v1/motorcycles/${MOTORCYCLE_ID}`,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.text())\r\n        .then((result) => console.log(result))\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  };\r\n\r\n  const handleChangeImage = (event) => {\r\n    const newImage = event.target.files[0];\r\n    if (newImage) {\r\n      setImageNew(URL.createObjectURL(newImage));\r\n    }\r\n  };\r\n\r\n  const handleRemoceImage = (event) => {\r\n    setImageNew(\"\");\r\n  };\r\n\r\n  const uploadImage = async () => {\r\n    //setLoading(true);\r\n\r\n    //formData.append(\"cloud_name\", process.env.REACT_APP_CLOUDINARY_CLOUD_NAME);\r\n    //formData.append(\"folder\", \"Cloudinary-React\");\r\n    try {\r\n      const responseBlob = await fetch(imageNew);\r\n      const blob = await responseBlob.blob();\r\n      const file = new File([blob], \"filename.jpg\", { type: \"image/jpeg\" });\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"upload_preset\", \"szopv83k\");\r\n\r\n      const response = await fetch(\r\n        `https://api.cloudinary.com/v1_1/dx59hbzcc/image/upload`,\r\n        {\r\n          method: \"POST\",\r\n          body: formData,\r\n        }\r\n      );\r\n      const res = await response.json();\r\n      return res;\r\n    } catch (error) {\r\n      console.log(error);\r\n      //setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"RegistrationNumber\"\r\n            label=\"เลขทะเบียน\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setRegistrationNumber(e.target.value)}\r\n            value={RegistrationNumber}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"BucketNumber\"\r\n            label=\"เลขตัวถัง\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setBucketNumber(e.target.value)}\r\n            value={BucketNumber}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Brand\"\r\n            label=\"ยี่ห้อ\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setBrand(e.target.value)}\r\n            value={Brand}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Model\"\r\n            label=\"รุ่น\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setModel(e.target.value)}\r\n            value={Model}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Color\"\r\n            label=\"สี\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setColor(e.target.value)}\r\n            value={Color}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Price\"\r\n            label=\"ราคา\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setPrice(e.target.value)}\r\n            value={Price}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Balance\"\r\n            label=\"ยอดคงเหลือ\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setBalance(e.target.value)}\r\n            value={Balance}\r\n          ></TextField>\r\n        </Grid>\r\n        <div>\r\n          <Box\r\n            component=\"img\"\r\n            sx={{\r\n              height: 300,\r\n              width: 300,\r\n              borderColor: \"primary.main\",\r\n              borderRadius: \"50%\",\r\n              border: 15,\r\n            }}\r\n            src={imageNew ?? imageOld}\r\n          />\r\n\r\n          <Button onClick={handleRemoceImage}>ล้างรูป</Button>\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" component=\"label\">\r\n            Upload File\r\n            <input\r\n              accept=\"image/*\"\r\n              type=\"file\"\r\n              hidden\r\n              onChange={handleChangeImage}\r\n            />\r\n          </Button>\r\n        </div>\r\n\r\n        <button type=\"submit\" variant=\"contained\" class=\"btn btn-primary mb-3\">\r\n          แก้ไข\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default UpdateMotorcycle;\r\n","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\user\\user_info.jsx",["233","234","235","236","237","238","239"],[],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nexport default function UserInfoAdmin() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [items, setItems] = useState([]);\r\n  const handleInputChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    UserGet();\r\n  }, []);\r\n\r\n  const UserGet = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nvar requestOptions = {\r\n  method: 'GET',\r\n  headers: myHeaders,\r\n  redirect: 'follow'\r\n};\r\n\r\nfetch(\"http://localhost:3001/api/v1/users\", requestOptions)\r\n  .then(response => response.json())\r\n  .then((result) => {\r\n    setLoading(false);\r\n    setItems(result);\r\n  })\r\n  .catch(error => console.log('error', error));\r\n  };\r\n\r\n  const UserDelete = (USER_ID) => {\r\n    var requestOptions = {\r\n      method: \"DELETE\",\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      `http://localhost:3001/api/v1/users/${USER_ID}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.text())\r\n      .then((result) => console.log(result))\r\n      .catch((error) => console.log(\"error\", error));\r\n    window.location.reload();\r\n  };\r\n\r\n  const UserUpdate = (USER_ID) => {\r\n    window.location = \"/admin/user/user-update/\" + USER_ID;\r\n  };\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  return (\r\n    <diV>\r\n    <Row>\r\n      <div class=\"search\">\r\n        <Col>\r\n          <Form>\r\n            <InputGroup>\r\n              <Form.Control\r\n                onChange={handleInputChange}\r\n                placeholder=\"ค้นหา\"\r\n              />\r\n            </InputGroup>\r\n          </Form>\r\n        </Col>\r\n      </div>\r\n    </Row>\r\n    {loading ? (\r\n      <p>Loading...</p>\r\n    ) : (\r\n      <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n        <TableContainer sx={{ maxHeight: 440 }}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>เลขประจำตัวบัตรประชาชน</TableCell>\r\n                <TableCell>ชื่อ - นามสกุด</TableCell>\r\n                <TableCell>เบอร์โทร</TableCell>\r\n                <TableCell>แก้ไขข้อมูล</TableCell>\r\n                <TableCell>ลบข้อมูล</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {items\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .filter((row) => {\r\n                  return (\r\n                    search.trim() === \"\" ||\r\n                    row.USER_FULLNAME.toLowerCase().includes(\r\n                      search.toLowerCase()\r\n                    ) ||\r\n                    row.USER_CODE_NUMBER.toLowerCase().includes(\r\n                      search.toLowerCase()\r\n                    ) ||\r\n                    row.USER_TELL.toLowerCase().includes(\r\n                      search.toLowerCase()\r\n                    )\r\n                  );\r\n                })\r\n                .map((row) => (\r\n                  <TableRow\r\n                    key={row.name}\r\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                  >\r\n                    <TableCell>{row.USER_CODE_NUMBER}</TableCell>\r\n                    <TableCell>{row.USER_FULLNAME}</TableCell>\r\n                    <TableCell>\r\n                      {row.USER_TELL}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        type=\"button\"\r\n                        class=\"btn btn-warning\"\r\n                        onClick={() => UserUpdate(row.USER_ID)}\r\n                      >\r\n                        แก้ไข\r\n                      </Button>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        type=\"button\"\r\n                        class=\"btn btn-danger\"\r\n                        onClick={() => UserDelete(row.USER_ID)}\r\n                      >\r\n                        ลบ\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={items.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n          labelRowsPerPage=\"จำนวนแถวต่อหน้า:\"\r\n          labelDisplayedRows={({ from, to, count }) =>\r\n            `${from}-${to} จากทั้งหมด ${count}`\r\n          }\r\n        />\r\n      </Paper>\r\n    )}\r\n  </diV>\r\n  );\r\n}\r\n","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\user\\user_update.jsx",["240","241","242","243","244","245","246","247","248"],[],"import React, { Component, useState, useEffect } from \"react\";\r\nimport \"../user/css/user_update.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Grid, TextField } from \"@mui/material\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n  useLocation,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\n\r\nexport default function UserUpdateAdmin() {\r\n  const { USER_ID } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\"http://localhost:3001/api/v1/users/\" + USER_ID, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result[\"status\"] == \"ok\") {\r\n          setCodeNumber(result[\"result\"][\"USER_CODE_NUMBER\"]);\r\n          setFullName(result[\"result\"][\"USER_FULLNAME\"]);\r\n          setBirthday(result[\"result\"][\"USER_BIRTHDAY\"]);\r\n          setTell(result[\"result\"][\"USER_TELL\"]);\r\n          setOccupation(result[\"result\"][\"USER_OCCUPATION\"]);\r\n          setHouseNumber(result[\"result\"][\"USER_HOUSE_NUMBER\"]);\r\n          setGroup(result[\"result\"][\"USER_GROUP\"]);\r\n          setAlley(result[\"result\"][\"USER_ALLEY\"]);\r\n          setRoad(result[\"result\"][\"USER_ROAD\"]);\r\n          setSubDistrict(result[\"result\"][\"USER_SUB_DISTRICT\"]);\r\n          setDistrict(result[\"result\"][\"USER_DISTRICT\"]);\r\n          setProvince(result[\"result\"][\"USER_PROVINCE\"]);\r\n          setPostalCode(result[\"result\"][\"USER_POSTAL_CODE\"]);\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }, [USER_ID]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n      USER_CODE_NUMBER: CodeNumber,\r\n      USER_FULLNAME: FullName,\r\n      USER_BIRTHDAY: BirthDay,\r\n      USER_TELL: Tell,\r\n      USER_OCCUPATION: Occupation,\r\n      USER_HOUSE_NUMBER: HouseNumber,\r\n      USER_GROUP: Group,\r\n      USER_ALLEY: Alley,\r\n      USER_ROAD: Road,\r\n      USER_SUB_DISTRICT: SubDistrict,\r\n      USER_DISTRICT: District,\r\n      USER_PROVINCE: Province,\r\n      USER_POSTAL_CODE: PostalCode,\r\n    });\r\n\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`http://localhost:3001/api/v1/users/${USER_ID}`, requestOptions)\r\n      .then((response) => response.text())\r\n      .then((result) => console.log(result))\r\n      .catch((error) => console.log(\"error\", error));\r\n    navigate(\"/admin/user/user-info\");\r\n  };\r\n  const [CodeNumber, setCodeNumber] = useState(\"\");\r\n  const [FullName, setFullName] = useState(\"\");\r\n  const [BirthDay, setBirthday] = useState(\"\");\r\n  const [Tell, setTell] = useState(\"\");\r\n  const [Occupation, setOccupation] = useState(\"\");\r\n  const [HouseNumber, setHouseNumber] = useState(\"\");\r\n  const [Group, setGroup] = useState(\"\");\r\n  const [Alley, setAlley] = useState(\"\");\r\n  const [Road, setRoad] = useState(\"\");\r\n  const [SubDistrict, setSubDistrict] = useState(\"\");\r\n  const [District, setDistrict] = useState(\"\");\r\n  const [Province, setProvince] = useState(\"\");\r\n  const [PostalCode, setPostalCode] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid item xs={10} sm={6}>\r\n          <TextField\r\n            id=\"CodeNumber\"\r\n            label=\"เลขประจำตัวบัตรประชาชน\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setCodeNumber(e.target.value)}\r\n            value={CodeNumber}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"FullName\"\r\n            label=\"ชื่อ-นามสกุล\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setFullName(e.target.value)}\r\n            value={FullName}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"BirthDay\"\r\n            label=\"วัน/เดือน/ปี เกิด\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setBirthday(e.target.value)}\r\n            value={BirthDay}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Tell\"\r\n            label=\"เบอร์โทร\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setTell(e.target.value)}\r\n            value={Tell}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Occupation\"\r\n            label=\"อาชีพ\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setOccupation(e.target.value)}\r\n            value={Occupation}\r\n          ></TextField>\r\n        </Grid>\r\n        <Row>\r\n          <Col>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                id=\"HouseNumber\"\r\n                label=\"้บ้านเลขที่\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                required\r\n                onChange={(e) => setHouseNumber(e.target.value)}\r\n                value={HouseNumber}\r\n              ></TextField>\r\n            </Grid>\r\n          </Col>\r\n          <Col>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              id=\"Group\"\r\n              label=\"หมู่\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              required\r\n              onChange={(e) => setGroup(e.target.value)}\r\n              value={Group}\r\n            ></TextField>\r\n          </Grid>\r\n          </Col>\r\n          <Col>\r\n          <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Alley\"\r\n            label=\"ซอย\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setAlley(e.target.value)}\r\n            value={Alley}\r\n          ></TextField>\r\n        </Grid>\r\n          </Col>\r\n          <Col>\r\n           <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Road\"\r\n            label=\"ถนน\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setRoad(e.target.value)}\r\n            value={Road}\r\n          ></TextField>\r\n        </Grid>\r\n        </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n            <Col>\r\n            <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"SubDistrict\"\r\n            label=\"ตำบล\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setSubDistrict(e.target.value)}\r\n            value={SubDistrict}\r\n          ></TextField>\r\n        </Grid>\r\n            </Col>\r\n            <Col>\r\n             \r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"District\"\r\n            label=\"อำเภอ\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setDistrict(e.target.value)}\r\n            value={District}\r\n          ></TextField>\r\n        </Grid>\r\n            </Col>\r\n            <Col>\r\n            <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"Province\"\r\n            label=\"จังหวัด\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setProvince(e.target.value)}\r\n            value={Province}\r\n          ></TextField>\r\n        </Grid>\r\n            </Col>\r\n            <Col>\r\n             \r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"PostalCode\"\r\n            label=\"รหัสไปรษณีย์\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n            value={PostalCode}\r\n          ></TextField>\r\n        </Grid>\r\n            </Col>\r\n        </Row>\r\n\r\n        \r\n       \r\n       \r\n       \r\n        <button type=\"submit\" variant=\"contained\" class=\"btn btn-primary mb-3\">\r\n          บันทึก\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\admin\\repair\\repair_info_admin.jsx",["249","250","251","252","253","254","255","256","257","258","259","260","261","262"],[],"import React, { Component, useEffect, useState } from \"react\";\r\nimport \"../repair/css/repair_info.css\"\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Grid, TextField } from \"@mui/material\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport Dialog from '@mui/material/Dialog';\r\n\r\nconst filter = createFilterOptions();\r\n\r\n\r\nexport default function RepairInfoAdmin() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [items, setItems] = useState([]);\r\n  const [Wise, setWise] = useState(\"\");\r\n  const [Status, setStatus] = useState(\"\");\r\n  const [MotorcycleId,setMotorcycleId] = useState(\"\");\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [motorcycles, users, repaildataes] = await Promise.all([\r\n          MotorcycleGet(),\r\n          UserGet(),\r\n          RepairGet(),\r\n        ]);\r\n  \r\n        console.log(\"motorcycles:\", motorcycles);\r\n        console.log(\"users:\", users);\r\n        console.log(\"repaildataes:\", repaildataes);\r\n  \r\n        const repaildataesWithUserFullname = repaildataes.map((item) => {\r\n          const motorcycle = motorcycles.find((m) => m.MOTORCYCLE_ID === item.MOTORCYCLE_ID);\r\n          const user = users.find((u) => u.USER_ID === motorcycle.USER_ID);\r\n          return {\r\n            ...item,\r\n            USER_FULLNAME: user ? user.USER_FULLNAME : \"N/A\",\r\n          };\r\n        });\r\n  \r\n        const repaildataesWithBothData = repaildataesWithUserFullname.map((item) => {\r\n          const motorcycle = motorcycles.find((m) => m.MOTORCYCLE_ID === item.MOTORCYCLE_ID);\r\n          return {\r\n            ...item,\r\n            MOTORCYCLE_BUCKET_NUMBER: motorcycle ? motorcycle.MOTORCYCLE_BUCKET_NUMBER : \"N/A\",\r\n          };\r\n        });\r\n  \r\n        setItems(repaildataesWithBothData);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, []);\r\n  \r\n\r\n  const MotorcycleGet = () => {\r\n    return fetch(\"http://localhost:3001/api/v1/motorcycles\")\r\n      .then((res) => res.json())\r\n      .then((result)=> {\r\n        return result.map((motorcycle) => ({\r\n          MOTORCYCLE_ID : motorcycle.MOTORCYCLE_ID,\r\n          USER_ID: motorcycle.USER_ID,\r\n          MOTORCYCLE_BUCKET_NUMBER : motorcycle.MOTORCYCLE_BUCKET_NUMBER\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching motorcycles:\", error);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  const UserGet = () => {\r\n    return fetch(\"http://localhost:3001/api/v1/users\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        return result.map((user) => ({\r\n          USER_ID: user.USER_ID,\r\n          USER_FULLNAME: user.USER_FULLNAME,\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching users:\", error);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  const RepairGet = () => {\r\n    return fetch(\"http://localhost:3001/api/v1/repaildataes\")\r\n      .then((res) => res.json())\r\n      .catch((error) => {\r\n        console.error(\"Error fetching repaildataes:\", error);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  const handleSubmit = async (event) =>{\r\n    var myHeaders = new Headers();\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nvar raw = JSON.stringify({\r\n   MOTORCYCLE_ID : MotorcycleId,\r\n  REPAILDATA_WISE: Wise,\r\n  REPAILDATA_SATUS: Status\r\n});\r\n\r\nvar requestOptions = {\r\n  method: 'POST',\r\n  headers: myHeaders,\r\n  body: raw,\r\n  redirect: 'follow'\r\n};\r\n\r\nfetch(\"http://localhost:3001/api/v1/repaildataes\", requestOptions)\r\n  .then(response => response.text())\r\n  .then(result => console.log(result))\r\n  .catch(error => console.log('error', error));\r\n  }\r\n\r\n  \r\n  const RepairDelete = (REPAILDATA_ID) => {\r\n    var requestOptions = {\r\n      method: \"DELETE\",\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      `http://localhost:3001/api/v1/repaildataes/${REPAILDATA_ID}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.text())\r\n      .then((result) => console.log(result))\r\n      .catch((error) => console.log(\"error\", error));\r\n    window.location.reload();\r\n  };\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n      <Row>\r\n      \r\n          <Col> \r\n          \r\n          <TextUserFullName/>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                id=\"Wise\"\r\n                label=\"อาการ\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                required\r\n                onChange={(e) => setWise(e.target.value)}\r\n              ></TextField>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                id=\"Status\"\r\n                label=\"สถานะ\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                required\r\n                onChange={(e) => setWise(e.target.value)}\r\n              ></TextField>\r\n            </Grid>\r\n            <button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              class=\"btn btn-primary mb-3\"\r\n            >\r\n              บันทึก\r\n            </button>\r\n            <form/>\r\n          </Col>       \r\n           \r\n\r\n        <Col>\r\n\r\n        <div>\r\n        <div class=\"search\">\r\n          <Col>\r\n            <Form>\r\n              <InputGroup>\r\n                <Form.Control\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"ค้นหา\"\r\n                />\r\n              </InputGroup>\r\n            </Form>\r\n          </Col>\r\n        </div>\r\n          {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n          <TableContainer sx={{ maxHeight: 440 }}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>ชื่อลูกค้า</TableCell>\r\n                  <TableCell>เลขตัวถัง</TableCell>\r\n                  <TableCell>เลขทะเบียน</TableCell>\r\n                  <TableCell>แก้ไขข้อมูล</TableCell>\r\n                  <TableCell>ลบข้อมูล</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {items\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .filter((row) => {\r\n                    return (\r\n                      search.trim() === \"\" ||\r\n                      row.USER_FULLNAME.toLowerCase().includes(\r\n                        search.toLowerCase()\r\n                      ) \r\n                      || row.MOTORCYCLE_BUCKET_NUMBER.toLowerCase().includes(\r\n                        search.toLowerCase()\r\n                      ) \r\n                    );\r\n                  })\r\n                  .map((row) => (\r\n                    <TableRow\r\n                      key={row.name}\r\n                      sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                    >\r\n                      <TableCell>{row.USER_FULLNAME}</TableCell>\r\n                      <TableCell>{row.MOTORCYCLE_BUCKET_NUMBER}</TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          type=\"button\"\r\n                          class=\"btn btn-warning\"\r\n                         // onClick={() => MotorcycleUpdate(row.MOTORCYCLE_ID)}\r\n                        >\r\n                          แก้ไข\r\n                        </Button>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          type=\"button\"\r\n                          class=\"btn btn-danger\"\r\n                          onClick={() => RepairDelete(row.REPAILDATA_ID)}\r\n                        >\r\n                          ลบ\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={items.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            labelRowsPerPage=\"จำนวนแถวต่อหน้า:\"\r\n            labelDisplayedRows={({ from, to, count }) =>\r\n              `${from}-${to} จากทั้งหมด ${count}`\r\n            }\r\n          />\r\n        </Paper>\r\n         )}\r\n        </div>\r\n        </Col>\r\n      </Row>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TextUserFullName() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [items, setItems] = useState([]);\r\n  const [MotorcycleNumber, setSelectedMotorcycleNumber] = React.useState(null);\r\n  useEffect(() => {\r\n    Promise.all([MotorcycleGet(), UserGet()])\r\n      .then(([motorcycles, users]) => {\r\n        const filteredItems = motorcycles.filter(\r\n          (item) => item.USER_ID !== null\r\n        );\r\n        setItems(\r\n          filteredItems.map((item) => {\r\n            const user = users.find((u) => u.USER_ID === item.USER_ID);\r\n            return {\r\n              ...item,\r\n              USER_FULLNAME: user ? user.USER_FULLNAME : \"N/A\",\r\n              USER_TELL: user ? user.USER_TELL : \"N/A\",\r\n            };\r\n          })\r\n        );\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const MotorcycleGet = () => {\r\n    return fetch(\"http://localhost:3001/api/v1/motorcycles\")\r\n      .then((res) => res.json())\r\n      .catch((error) => {\r\n        console.error(\"Error fetching motorcycles:\", error);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  const UserGet = () => {\r\n    return fetch(\"http://localhost:3001/api/v1/users\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        return result.map((user) => ({\r\n          USER_ID: user.USER_ID,\r\n          USER_FULLNAME: user.USER_FULLNAME,\r\n          USER_TELL : user.USER_TELL\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching users:\", error);\r\n        return [];\r\n      });\r\n  };\r\n\r\n\r\n  const [value, setValue] = React.useState(null);\r\n  const [open, toggleOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setDialogValue({\r\n      USER_FULLNAME: '',\r\n    });\r\n    toggleOpen(false);\r\n  };\r\n\r\n  const [dialogValue, setDialogValue] = React.useState({\r\n    USER_FULLNAME: '',\r\n  });\r\n\r\n  const handleSubmit = async () =>{\r\n    const dataToSave = {\r\n      USER_FULLNAME: value.USER_FULLNAME,\r\n    };\r\n    handleClose();\r\n  };\r\n  const handleChangeAutocomplete = (event, newValue) => {\r\n    setValue(newValue);\r\n    setSelectedMotorcycleNumber(null);\r\n    handleSubmit();\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment>\r\n      <Autocomplete\r\n  value={MotorcycleNumber}\r\n  onChange={(event, newValue) => {\r\n    if (typeof newValue === 'string') {\r\n      // timeout to avoid instant validation of the dialog's form.\r\n      setTimeout(() => {\r\n        toggleOpen(true);\r\n        setDialogValue({\r\n          USER_FULLNAME: newValue,\r\n          MOTORCYCLE_BUCKET_NUMBER: '', // reset MOTORCYCLE_BUCKET_NUMBER\r\n        });\r\n\r\n        // ค้นหา MOTORCYCLE_BUCKET_NUMBER ที่เกี่ยวข้องกับ USER_ID ที่ถูกเลือก\r\n        const user = items.find((item) => item.MOTORCYCLE_BUCKET_NUMBER === newValue);\r\n        if (user) {\r\n          setSelectedMotorcycleNumber(user.MOTORCYCLE_BUCKET_NUMBER);\r\n        } else {\r\n          setSelectedMotorcycleNumber(null);\r\n        }\r\n      });\r\n    } else if (newValue && newValue.inputValue) {\r\n      toggleOpen(true);\r\n      setDialogValue({\r\n        USER_FULLNAME: newValue.inputValue,\r\n        MOTORCYCLE_BUCKET_NUMBER: '', // reset MOTORCYCLE_BUCKET_NUMBER\r\n      });\r\n    } else {\r\n      setValue(newValue);\r\n      setSelectedMotorcycleNumber(null); // reset MOTORCYCLE_BUCKET_NUMBER\r\n    }\r\n  }}\r\n  filterOptions={(options, params) => {\r\n    const filtered = filter(options, params);\r\n\r\n    if (params.inputValue !== '') {\r\n      filtered.push({\r\n        inputValue: params.inputValue,\r\n        MOTORCYCLE_BUCKET_NUMBER: `Add \"${params.inputValue}\"`,\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  }}\r\n  id=\"ชื่อ-นามสกุล\"\r\n  options={items}\r\n  getOptionLabel={(option) => {\r\n    if (typeof option === 'string') {\r\n      return option;\r\n    }\r\n    if (option.inputValue) {\r\n      return option.inputValue;\r\n    }\r\n    return option.MOTORCYCLE_BUCKET_NUMBER;\r\n  }}\r\n  selectOnFocus\r\n  clearOnBlur\r\n  handleHomeEndKeys\r\n  renderOption={(props, option) => {\r\n    if (option.MOTORCYCLE_BUCKET_NUMBER !== null) {\r\n      return <li {...props}>{option.MOTORCYCLE_BUCKET_NUMBER}</li>;\r\n    }\r\n    return null;\r\n  }}\r\n  sx={{ width: 300 }}\r\n  freeSolo\r\n  renderInput={(params) => <TextField {...params} label=\"MOTORCYCLE_BUCKET_NUMBER\" />}\r\n/>\r\n<Autocomplete\r\n  value={value}\r\n  onChange={(event, newValue) => {\r\n    if (typeof newValue === 'string') {\r\n      // timeout to avoid instant validation of the dialog's form.\r\n      setTimeout(() => {\r\n        toggleOpen(true);\r\n        setDialogValue({\r\n          USER_FULLNAME: newValue,\r\n          MOTORCYCLE_BUCKET_NUMBER: '', // reset MOTORCYCLE_BUCKET_NUMBER\r\n        });\r\n        // ค้นหา MOTORCYCLE_BUCKET_NUMBER ที่เกี่ยวข้องกับ USER_ID ที่ถูกเลือก\r\n        const user = items.find((item) => item.USER_FULLNAME === newValue);\r\n        if (user) {\r\n          setSelectedMotorcycleNumber(user.MOTORCYCLE_BUCKET_NUMBER);\r\n        }\r\n      });\r\n    } else if (newValue && newValue.inputValue) {\r\n      toggleOpen(true);\r\n      setDialogValue({\r\n        USER_FULLNAME: newValue.inputValue,\r\n        MOTORCYCLE_BUCKET_NUMBER: '', // reset MOTORCYCLE_BUCKET_NUMBER\r\n      });\r\n    } else {\r\n      setValue(newValue);\r\n      setSelectedMotorcycleNumber(null); // reset MOTORCYCLE_BUCKET_NUMBER\r\n    }\r\n  }}\r\n  filterOptions={(options, params) => {\r\n    const filtered = filter(options, params);\r\n\r\n    if (params.inputValue !== '') {\r\n      filtered.push({\r\n        inputValue: params.inputValue,\r\n        USER_FULLNAME: `Add \"${params.inputValue}\"`,\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  }}\r\n  id=\"ชื่อ-นามสกุล\"\r\n  options={items}\r\n  getOptionLabel={(option) => {\r\n    if (typeof option === 'string') {\r\n      return option;\r\n    }\r\n    if (option.inputValue) {\r\n      return option.inputValue;\r\n    }\r\n    return option.USER_FULLNAME;\r\n  }}\r\n  selectOnFocus\r\n  clearOnBlur\r\n  handleHomeEndKeys\r\n  renderOption={(props, option) => {\r\n    if (option.USER_FULLNAME !== null) {\r\n      return <li {...props}>{option.USER_FULLNAME}</li>;\r\n    }\r\n    return null;\r\n  }}\r\n  sx={{ width: 300 }}\r\n  freeSolo\r\n  renderInput={(params) => <TextField {...params} label=\"USER_FULLNAME\" />}\r\n/>\r\n<Autocomplete\r\n  value={value}\r\n  onChange={(event, newValue) => {\r\n    if (typeof newValue === 'string') {\r\n      // timeout to avoid instant validation of the dialog's form.\r\n      setTimeout(() => {\r\n        toggleOpen(true);\r\n        setDialogValue({\r\n          USER_TELL: newValue,\r\n          MOTORCYCLE_BUCKET_NUMBER: '', // reset MOTORCYCLE_BUCKET_NUMBER\r\n        });\r\n        // ค้นหา MOTORCYCLE_BUCKET_NUMBER ที่เกี่ยวข้องกับ USER_ID ที่ถูกเลือก\r\n        const user = items.find((item) => item.USER_TELL === newValue);\r\n        if (user) {\r\n          setSelectedMotorcycleNumber(user.MOTORCYCLE_BUCKET_NUMBER);\r\n        }\r\n      });\r\n    } else if (newValue && newValue.inputValue) {\r\n      toggleOpen(true);\r\n      setDialogValue({\r\n        USER_TELL: newValue.inputValue,\r\n        MOTORCYCLE_BUCKET_NUMBER: '', // reset MOTORCYCLE_BUCKET_NUMBER\r\n      });\r\n    } else {\r\n      setValue(newValue);\r\n      setSelectedMotorcycleNumber(null); // reset MOTORCYCLE_BUCKET_NUMBER\r\n    }\r\n  }}\r\n  filterOptions={(options, params) => {\r\n    const filtered = filter(options, params);\r\n\r\n    if (params.inputValue !== '') {\r\n      filtered.push({\r\n        inputValue: params.inputValue,\r\n        USER_TELL: `Add \"${params.inputValue}\"`,\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  }}\r\n  id=\"ชื่อ-นามสกุล\"\r\n  options={items}\r\n  getOptionLabel={(option) => {\r\n    if (typeof option === 'string') {\r\n      return option;\r\n    }\r\n    if (option.inputValue) {\r\n      return option.inputValue;\r\n    }\r\n    return option.USER_TELL;\r\n  }}\r\n  selectOnFocus\r\n  clearOnBlur\r\n  handleHomeEndKeys\r\n  renderOption={(props, option) => {\r\n    if (option.USER_TELL !== null) {\r\n      return <li {...props}>{option.USER_TELL}</li>;\r\n    }\r\n    return null;\r\n  }}\r\n  sx={{ width: 300 }}\r\n  freeSolo\r\n  renderInput={(params) => <TextField {...params} label=\"USER_TELL\" />}\r\n/>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}","C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\login\\register.jsx",["263","264","265","266","267","268","269","270","271","272","273"],[],"C:\\Users\\BlackPinker\\Documents\\GitHub\\store-management-system\\client\\src\\component\\card_car.jsx",["274"],[],{"ruleId":"275","severity":1,"message":"276","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":25},{"ruleId":"275","severity":1,"message":"279","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":40},{"ruleId":"275","severity":1,"message":"276","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":25},{"ruleId":"275","severity":1,"message":"279","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":40},{"ruleId":"275","severity":1,"message":"280","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":12},{"ruleId":"275","severity":1,"message":"281","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":13},{"ruleId":"282","severity":1,"message":"283","line":18,"column":29,"nodeType":"284","endLine":18,"endColumn":32},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"286","line":6,"column":8,"nodeType":"277","messageId":"278","endLine":6,"endColumn":21},{"ruleId":"275","severity":1,"message":"287","line":10,"column":10,"nodeType":"277","messageId":"278","endLine":10,"endColumn":14},{"ruleId":"288","severity":1,"message":"289","line":20,"column":26,"nodeType":"290","messageId":"291","endLine":20,"endColumn":28},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"276","line":1,"column":28,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"292","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":20},{"ruleId":"275","severity":1,"message":"293","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":23},{"ruleId":"275","severity":1,"message":"294","line":4,"column":25,"nodeType":"277","messageId":"278","endLine":4,"endColumn":31},{"ruleId":"275","severity":1,"message":"295","line":4,"column":33,"nodeType":"277","messageId":"278","endLine":4,"endColumn":38},{"ruleId":"282","severity":1,"message":"283","line":23,"column":19,"nodeType":"284","endLine":23,"endColumn":22},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"296","line":1,"column":38,"nodeType":"277","messageId":"278","endLine":1,"endColumn":47},{"ruleId":"275","severity":1,"message":"297","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":16},{"ruleId":"275","severity":1,"message":"292","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":20},{"ruleId":"275","severity":1,"message":"298","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":14},{"ruleId":"275","severity":1,"message":"299","line":4,"column":16,"nodeType":"277","messageId":"278","endLine":4,"endColumn":25},{"ruleId":"275","severity":1,"message":"300","line":4,"column":40,"nodeType":"277","messageId":"278","endLine":4,"endColumn":45},{"ruleId":"275","severity":1,"message":"293","line":6,"column":3,"nodeType":"277","messageId":"278","endLine":6,"endColumn":16},{"ruleId":"275","severity":1,"message":"294","line":7,"column":3,"nodeType":"277","messageId":"278","endLine":7,"endColumn":9},{"ruleId":"275","severity":1,"message":"295","line":8,"column":3,"nodeType":"277","messageId":"278","endLine":8,"endColumn":8},{"ruleId":"275","severity":1,"message":"301","line":9,"column":3,"nodeType":"277","messageId":"278","endLine":9,"endColumn":14},{"ruleId":"275","severity":1,"message":"302","line":12,"column":10,"nodeType":"277","messageId":"278","endLine":12,"endColumn":18},{"ruleId":"275","severity":1,"message":"303","line":22,"column":16,"nodeType":"277","messageId":"278","endLine":22,"endColumn":23},{"ruleId":"288","severity":1,"message":"289","line":53,"column":29,"nodeType":"290","messageId":"291","endLine":53,"endColumn":31},{"ruleId":"275","severity":1,"message":"304","line":70,"column":9,"nodeType":"277","messageId":"278","endLine":70,"endColumn":20},{"ruleId":"288","severity":1,"message":"289","line":102,"column":15,"nodeType":"290","messageId":"291","endLine":102,"endColumn":17},{"ruleId":"288","severity":1,"message":"289","line":109,"column":13,"nodeType":"290","messageId":"291","endLine":109,"endColumn":15},{"ruleId":"288","severity":1,"message":"289","line":158,"column":16,"nodeType":"290","messageId":"291","endLine":158,"endColumn":18},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"285","line":3,"column":17,"nodeType":"277","messageId":"278","endLine":3,"endColumn":26},{"ruleId":"275","severity":1,"message":"305","line":7,"column":31,"nodeType":"277","messageId":"278","endLine":7,"endColumn":45},{"ruleId":"275","severity":1,"message":"306","line":9,"column":7,"nodeType":"277","messageId":"278","endLine":9,"endColumn":13},{"ruleId":"282","severity":1,"message":"283","line":31,"column":15,"nodeType":"284","endLine":31,"endColumn":49},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"307","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":33},{"ruleId":"275","severity":1,"message":"308","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":19},{"ruleId":"309","severity":1,"message":"310","line":125,"column":9,"nodeType":"277","messageId":"311","endLine":125,"endColumn":18},{"ruleId":"309","severity":1,"message":"312","line":128,"column":9,"nodeType":"277","messageId":"311","endLine":128,"endColumn":12},{"ruleId":"309","severity":1,"message":"313","line":134,"column":9,"nodeType":"277","messageId":"311","endLine":134,"endColumn":23},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"276","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":25},{"ruleId":"275","severity":1,"message":"296","line":1,"column":42,"nodeType":"277","messageId":"278","endLine":1,"endColumn":51},{"ruleId":"275","severity":1,"message":"314","line":1,"column":53,"nodeType":"277","messageId":"278","endLine":1,"endColumn":63},{"ruleId":"275","severity":1,"message":"292","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":20},{"ruleId":"275","severity":1,"message":"293","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":23},{"ruleId":"275","severity":1,"message":"294","line":4,"column":25,"nodeType":"277","messageId":"278","endLine":4,"endColumn":31},{"ruleId":"275","severity":1,"message":"295","line":4,"column":33,"nodeType":"277","messageId":"278","endLine":4,"endColumn":38},{"ruleId":"282","severity":1,"message":"283","line":35,"column":19,"nodeType":"284","endLine":35,"endColumn":22},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"296","line":1,"column":38,"nodeType":"277","messageId":"278","endLine":1,"endColumn":47},{"ruleId":"275","severity":1,"message":"297","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":16},{"ruleId":"275","severity":1,"message":"292","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":20},{"ruleId":"275","severity":1,"message":"315","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":11},{"ruleId":"275","severity":1,"message":"299","line":5,"column":8,"nodeType":"277","messageId":"278","endLine":5,"endColumn":17},{"ruleId":"275","severity":1,"message":"293","line":7,"column":3,"nodeType":"277","messageId":"278","endLine":7,"endColumn":16},{"ruleId":"275","severity":1,"message":"294","line":8,"column":3,"nodeType":"277","messageId":"278","endLine":8,"endColumn":9},{"ruleId":"275","severity":1,"message":"295","line":9,"column":3,"nodeType":"277","messageId":"278","endLine":9,"endColumn":8},{"ruleId":"275","severity":1,"message":"301","line":10,"column":3,"nodeType":"277","messageId":"278","endLine":10,"endColumn":14},{"ruleId":"288","severity":1,"message":"289","line":42,"column":29,"nodeType":"290","messageId":"291","endLine":42,"endColumn":31},{"ruleId":"282","severity":1,"message":"283","line":66,"column":17,"nodeType":"284","endLine":69,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":84,"column":17,"nodeType":"284","endLine":87,"endColumn":18},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"296","line":1,"column":38,"nodeType":"277","messageId":"278","endLine":1,"endColumn":47},{"ruleId":"275","severity":1,"message":"297","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":16},{"ruleId":"275","severity":1,"message":"292","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":20},{"ruleId":"275","severity":1,"message":"293","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":23},{"ruleId":"275","severity":1,"message":"294","line":4,"column":25,"nodeType":"277","messageId":"278","endLine":4,"endColumn":31},{"ruleId":"275","severity":1,"message":"295","line":4,"column":33,"nodeType":"277","messageId":"278","endLine":4,"endColumn":38},{"ruleId":"275","severity":1,"message":"301","line":4,"column":40,"nodeType":"277","messageId":"278","endLine":4,"endColumn":51},{"ruleId":"275","severity":1,"message":"302","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":18},{"ruleId":"275","severity":1,"message":"300","line":6,"column":40,"nodeType":"277","messageId":"278","endLine":6,"endColumn":45},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"316","line":17,"column":8,"nodeType":"277","messageId":"278","endLine":17,"endColumn":14},{"ruleId":"275","severity":1,"message":"317","line":18,"column":8,"nodeType":"277","messageId":"278","endLine":18,"endColumn":21},{"ruleId":"275","severity":1,"message":"318","line":19,"column":8,"nodeType":"277","messageId":"278","endLine":19,"endColumn":21},{"ruleId":"275","severity":1,"message":"319","line":20,"column":8,"nodeType":"277","messageId":"278","endLine":20,"endColumn":25},{"ruleId":"275","severity":1,"message":"320","line":21,"column":8,"nodeType":"277","messageId":"278","endLine":21,"endColumn":19},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"297","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":16},{"ruleId":"275","severity":1,"message":"292","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":20},{"ruleId":"275","severity":1,"message":"293","line":6,"column":10,"nodeType":"277","messageId":"278","endLine":6,"endColumn":23},{"ruleId":"275","severity":1,"message":"294","line":6,"column":25,"nodeType":"277","messageId":"278","endLine":6,"endColumn":31},{"ruleId":"275","severity":1,"message":"295","line":6,"column":33,"nodeType":"277","messageId":"278","endLine":6,"endColumn":38},{"ruleId":"275","severity":1,"message":"301","line":6,"column":40,"nodeType":"277","messageId":"278","endLine":6,"endColumn":51},{"ruleId":"275","severity":1,"message":"302","line":7,"column":10,"nodeType":"277","messageId":"278","endLine":7,"endColumn":18},{"ruleId":"288","severity":1,"message":"289","line":34,"column":30,"nodeType":"290","messageId":"291","endLine":34,"endColumn":32},{"ruleId":"309","severity":1,"message":"310","line":86,"column":11,"nodeType":"277","messageId":"311","endLine":86,"endColumn":20},{"ruleId":"309","severity":1,"message":"312","line":88,"column":11,"nodeType":"277","messageId":"311","endLine":88,"endColumn":14},{"ruleId":"309","severity":1,"message":"313","line":99,"column":11,"nodeType":"277","messageId":"311","endLine":99,"endColumn":25},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"302","line":11,"column":10,"nodeType":"277","messageId":"278","endLine":11,"endColumn":18},{"ruleId":"275","severity":1,"message":"316","line":15,"column":8,"nodeType":"277","messageId":"278","endLine":15,"endColumn":14},{"ruleId":"275","severity":1,"message":"317","line":16,"column":8,"nodeType":"277","messageId":"278","endLine":16,"endColumn":21},{"ruleId":"275","severity":1,"message":"318","line":17,"column":8,"nodeType":"277","messageId":"278","endLine":17,"endColumn":21},{"ruleId":"275","severity":1,"message":"319","line":18,"column":8,"nodeType":"277","messageId":"278","endLine":18,"endColumn":25},{"ruleId":"275","severity":1,"message":"320","line":19,"column":8,"nodeType":"277","messageId":"278","endLine":19,"endColumn":19},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"297","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":16},{"ruleId":"275","severity":1,"message":"292","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":20},{"ruleId":"275","severity":1,"message":"302","line":6,"column":10,"nodeType":"277","messageId":"278","endLine":6,"endColumn":18},{"ruleId":"275","severity":1,"message":"293","line":11,"column":3,"nodeType":"277","messageId":"278","endLine":11,"endColumn":16},{"ruleId":"275","severity":1,"message":"294","line":12,"column":3,"nodeType":"277","messageId":"278","endLine":12,"endColumn":9},{"ruleId":"275","severity":1,"message":"295","line":13,"column":3,"nodeType":"277","messageId":"278","endLine":13,"endColumn":8},{"ruleId":"275","severity":1,"message":"301","line":14,"column":3,"nodeType":"277","messageId":"278","endLine":14,"endColumn":14},{"ruleId":"288","severity":1,"message":"289","line":31,"column":30,"nodeType":"290","messageId":"291","endLine":31,"endColumn":32},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"302","line":15,"column":10,"nodeType":"277","messageId":"278","endLine":15,"endColumn":18},{"ruleId":"275","severity":1,"message":"320","line":17,"column":8,"nodeType":"277","messageId":"278","endLine":17,"endColumn":19},{"ruleId":"275","severity":1,"message":"318","line":18,"column":8,"nodeType":"277","messageId":"278","endLine":18,"endColumn":21},{"ruleId":"275","severity":1,"message":"319","line":19,"column":8,"nodeType":"277","messageId":"278","endLine":19,"endColumn":25},{"ruleId":"275","severity":1,"message":"317","line":20,"column":8,"nodeType":"277","messageId":"278","endLine":20,"endColumn":21},{"ruleId":"275","severity":1,"message":"316","line":22,"column":8,"nodeType":"277","messageId":"278","endLine":22,"endColumn":14},{"ruleId":"275","severity":1,"message":"321","line":32,"column":18,"nodeType":"277","messageId":"278","endLine":32,"endColumn":27},{"ruleId":"275","severity":1,"message":"322","line":33,"column":23,"nodeType":"277","messageId":"278","endLine":33,"endColumn":38},{"ruleId":"275","severity":1,"message":"323","line":309,"column":10,"nodeType":"277","messageId":"278","endLine":309,"endColumn":17},{"ruleId":"275","severity":1,"message":"324","line":363,"column":10,"nodeType":"277","messageId":"278","endLine":363,"endColumn":14},{"ruleId":"275","severity":1,"message":"325","line":371,"column":10,"nodeType":"277","messageId":"278","endLine":371,"endColumn":21},{"ruleId":"275","severity":1,"message":"326","line":376,"column":11,"nodeType":"277","messageId":"278","endLine":376,"endColumn":21},{"ruleId":"275","severity":1,"message":"327","line":381,"column":9,"nodeType":"277","messageId":"278","endLine":381,"endColumn":33},{"ruleId":"275","severity":1,"message":"285","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"297","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":16},{"ruleId":"275","severity":1,"message":"292","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":20},{"ruleId":"275","severity":1,"message":"302","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":18},{"ruleId":"275","severity":1,"message":"293","line":9,"column":10,"nodeType":"277","messageId":"278","endLine":9,"endColumn":23},{"ruleId":"275","severity":1,"message":"294","line":9,"column":25,"nodeType":"277","messageId":"278","endLine":9,"endColumn":31},{"ruleId":"275","severity":1,"message":"295","line":9,"column":33,"nodeType":"277","messageId":"278","endLine":9,"endColumn":38},{"ruleId":"275","severity":1,"message":"328","line":11,"column":9,"nodeType":"277","messageId":"278","endLine":11,"endColumn":17},{"ruleId":"275","severity":1,"message":"329","line":28,"column":10,"nodeType":"277","messageId":"278","endLine":28,"endColumn":25},{"ruleId":"288","severity":1,"message":"289","line":58,"column":29,"nodeType":"290","messageId":"291","endLine":58,"endColumn":31},{"ruleId":"282","severity":1,"message":"330","line":89,"column":13,"nodeType":"284","endLine":89,"endColumn":73},{"ruleId":"288","severity":1,"message":"289","line":17,"column":72,"nodeType":"290","messageId":"291","endLine":17,"endColumn":74},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","'Home' is defined but never used.","'Login' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'ImageListItem' is defined but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'withRouter' is defined but never used.","'BrowserRouter' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'useEffect' is defined but never used.","'Outlet' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'Badge' is defined but never used.","'useLocation' is defined but never used.","'Navigate' is defined but never used.","'setDate' is assigned a value but never used.","'uploadImage' is assigned a value but never used.","'RouterProvider' is defined but never used.","'router' is assigned a value but never used.","'ReactSearchAutocomplete' is defined but never used.","'useParams' is defined but never used.","no-redeclare","'myHeaders' is already defined.","redeclared","'raw' is already defined.","'requestOptions' is already defined.","'useContext' is defined but never used.","'Box' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'setStatus' is assigned a value but never used.","'setMotorcycleId' is assigned a value but never used.","'loading' is assigned a value but never used.","'open' is assigned a value but never used.","'dialogValue' is assigned a value but never used.","'dataToSave' is assigned a value but never used.","'handleChangeAutocomplete' is assigned a value but never used.","'navigate' is assigned a value but never used.","'PasswordConfirm' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]