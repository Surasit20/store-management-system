{"ast":null,"code":"// import React, { Component, useEffect, useState } from \"react\";\n// import \"./css/motorcycle_info.css\";\n// import \"./css_admin.css\";\n// import { Box, Container } from '@mui/system';\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell from '@mui/material/TableCell';\n// import TableContainer from '@mui/material/TableContainer';\n// import TableHead from '@mui/material/TableHead';\n// import TableRow from '@mui/material/TableRow';\n// import { Navigate } from 'react-router-dom';\n// import Button from '@mui/material/Button';\n// import ButtonGroup from '@mui/material/ButtonGroup';\n// import CssBaseline from '@mui/material/CssBaseline';\n\n// function MotorcycleInfoAdmin() {\n//   const [items,setItems] = useState([]);\n//   const [users, setUsers] = useState([]);\n//   useEffect(()=>{\n//     UserGet()\n//     MotorcycleGet()\n//   });\n\n//   const MotorcycleGet = () => {\n//     fetch(\"http://localhost:3001/api/v1/motorcycles\")\n//       .then(res => res.json())\n//       .then((result) => {\n//         if (result !== null && Array.isArray(result)) {\n//           // ตรวจสอบว่า result เป็น array หรือไม่ เพื่อป้องกันกรณีที่ result ไม่ใช่ array หรือมีค่าเป็น null\n//           // ถ้าเป็น array ให้ทำการเช็ค USER_ID ในแต่ละไอเทมและดำเนินการตามที่ต้องการ\n//           const filteredItems = result.filter((item) => item.USER_ID !== null);\n//           setItems(filteredItems.map(item => {\n//             const user = users.find(u => u.USER_ID === item.USER_ID);\n//             return {\n//               ...item,\n//               USER_FULLNAME: user ? user.USER_FULLNAME : 'N/A' // ถ้าไม่พบ user ในข้อมูลให้กำหนด USER_FULLNAME เป็น 'N/A'\n//             };\n//           }));\n//         } else {\n//           setItems([]);\n//         }\n//       })\n//       .catch(error => console.error('Error fetching motorcycles:', error));\n//     }\n\n//   const UserGet = () => {\n//     fetch(\"http://localhost:3001/api/v1/users\")\n//       .then(res => res.json())\n//       .then((result) => {\n//         setUsers(result);\n//       })\n//       .catch(error => console.error('Error fetching users:', error));\n//   }\n\n//   const MotorcycleDelete = (MOTORCYCLE_ID) => {\n//     var requestOptions = {\n//       method: 'DELETE',\n//       redirect: 'follow'\n//     };\n\n//     fetch(`http://localhost:3001/api/v1/motorcycles/${MOTORCYCLE_ID}`, requestOptions)\n//       .then(response => response.text())\n//       .then(result => console.log(result))\n//       .catch(error => console.log('error', error));\n//   }\n\n//   const MotorcycleUpdate = (MOTORCYCLE_ID)=>{\n//     window.location = '/admin/update-motorcycle/'+ MOTORCYCLE_ID\n//   }\n\n//   const [gotoAddMotorcycle,setGotoAddMotorcycle] = React.useState(false);\n//   if(gotoAddMotorcycle){\n//       return <Navigate to = \"/admin/add-motorcycle\" />;\n//   }\n//   return( \n//   <div>\n//     <div>\n//           <button onClick={()=>{setGotoAddMotorcycle(true);}}>\n//         เพิ่มข้อมูล\n//     </button></div>\n//     { <React.Fragment>\n//       <div class=\"grid-container\">\n//       <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\n//         <TableHead>\n//           <TableRow>\n//             <TableCell>ชื่อลูกค้า</TableCell>\n//             <TableCell>เลขตัวถัง</TableCell>\n//             <TableCell>เลขทะเบียน</TableCell>\n//             <TableCell>รายละเอียด</TableCell>\n//             <TableCell>แก้ไขข้อมูล</TableCell>\n//             <TableCell>ลบข้อมูล</TableCell>\n//           </TableRow>\n//         </TableHead>\n//         <TableBody>\n//           {items.map((row) => (\n//             <TableRow\n//               key={row.name}\n//               sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n//             >\n//               <TableCell >{row.USER_FULLNAME}</TableCell>\n//               <TableCell >{row.MOTORCYCLE_BUCKET_NUMBER}</TableCell>\n//               <TableCell >{row.MOTORCYCLE_REGISTRATION_NUMBER}</TableCell>\n//               <TableCell ><Button type=\"button\" class=\"btn btn-success \" onClick={()=>MotorcycleUpdate(row.MOTORCYCLE_ID)}>รายละเอียด</Button></TableCell>\n//               <TableCell ><Button type=\"button\" class=\"btn btn-warning\" onClick={()=>MotorcycleUpdate(row.MOTORCYCLE_ID)}>แก้ไข</Button></TableCell>\n//               <TableCell ><Button type=\"button\" class=\"btn btn-danger\" onClick={()=>MotorcycleDelete(row.MOTORCYCLE_ID)}>ลบ</Button></TableCell>\n//             </TableRow>\n//           ))}\n//         </TableBody>\n//       </Table>\n// </div>  \n//     </React.Fragment> }\n//     </div>\n\n//   );\n// }\n\n// export default MotorcycleInfoAdmin;","map":{"version":3,"names":[],"sources":["C:/Users/Lucknara/Documents/GitHub/store-management-system/client/src/admin/motorcycle_info_admin.jsx"],"sourcesContent":["// import React, { Component, useEffect, useState } from \"react\";\r\n// import \"./css/motorcycle_info.css\";\r\n// import \"./css_admin.css\";\r\n// import { Box, Container } from '@mui/system';\r\n// import Table from '@mui/material/Table';\r\n// import TableBody from '@mui/material/TableBody';\r\n// import TableCell from '@mui/material/TableCell';\r\n// import TableContainer from '@mui/material/TableContainer';\r\n// import TableHead from '@mui/material/TableHead';\r\n// import TableRow from '@mui/material/TableRow';\r\n// import { Navigate } from 'react-router-dom';\r\n// import Button from '@mui/material/Button';\r\n// import ButtonGroup from '@mui/material/ButtonGroup';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n\r\n// function MotorcycleInfoAdmin() {\r\n//   const [items,setItems] = useState([]);\r\n//   const [users, setUsers] = useState([]);\r\n//   useEffect(()=>{\r\n//     UserGet()\r\n//     MotorcycleGet()\r\n//   });\r\n\r\n//   const MotorcycleGet = () => {\r\n//     fetch(\"http://localhost:3001/api/v1/motorcycles\")\r\n//       .then(res => res.json())\r\n//       .then((result) => {\r\n//         if (result !== null && Array.isArray(result)) {\r\n//           // ตรวจสอบว่า result เป็น array หรือไม่ เพื่อป้องกันกรณีที่ result ไม่ใช่ array หรือมีค่าเป็น null\r\n//           // ถ้าเป็น array ให้ทำการเช็ค USER_ID ในแต่ละไอเทมและดำเนินการตามที่ต้องการ\r\n//           const filteredItems = result.filter((item) => item.USER_ID !== null);\r\n//           setItems(filteredItems.map(item => {\r\n//             const user = users.find(u => u.USER_ID === item.USER_ID);\r\n//             return {\r\n//               ...item,\r\n//               USER_FULLNAME: user ? user.USER_FULLNAME : 'N/A' // ถ้าไม่พบ user ในข้อมูลให้กำหนด USER_FULLNAME เป็น 'N/A'\r\n//             };\r\n//           }));\r\n//         } else {\r\n//           setItems([]);\r\n//         }\r\n//       })\r\n//       .catch(error => console.error('Error fetching motorcycles:', error));\r\n//     }\r\n  \r\n\r\n//   const UserGet = () => {\r\n//     fetch(\"http://localhost:3001/api/v1/users\")\r\n//       .then(res => res.json())\r\n//       .then((result) => {\r\n//         setUsers(result);\r\n//       })\r\n//       .catch(error => console.error('Error fetching users:', error));\r\n//   }\r\n\r\n//   const MotorcycleDelete = (MOTORCYCLE_ID) => {\r\n//     var requestOptions = {\r\n//       method: 'DELETE',\r\n//       redirect: 'follow'\r\n//     };\r\n  \r\n//     fetch(`http://localhost:3001/api/v1/motorcycles/${MOTORCYCLE_ID}`, requestOptions)\r\n//       .then(response => response.text())\r\n//       .then(result => console.log(result))\r\n//       .catch(error => console.log('error', error));\r\n//   }\r\n\r\n//   const MotorcycleUpdate = (MOTORCYCLE_ID)=>{\r\n//     window.location = '/admin/update-motorcycle/'+ MOTORCYCLE_ID\r\n//   }\r\n  \r\n\r\n//   const [gotoAddMotorcycle,setGotoAddMotorcycle] = React.useState(false);\r\n//   if(gotoAddMotorcycle){\r\n//       return <Navigate to = \"/admin/add-motorcycle\" />;\r\n//   }\r\n//   return( \r\n//   <div>\r\n//     <div>\r\n//           <button onClick={()=>{setGotoAddMotorcycle(true);}}>\r\n//         เพิ่มข้อมูล\r\n//     </button></div>\r\n//     { <React.Fragment>\r\n//       <div class=\"grid-container\">\r\n//       <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n//         <TableHead>\r\n//           <TableRow>\r\n//             <TableCell>ชื่อลูกค้า</TableCell>\r\n//             <TableCell>เลขตัวถัง</TableCell>\r\n//             <TableCell>เลขทะเบียน</TableCell>\r\n//             <TableCell>รายละเอียด</TableCell>\r\n//             <TableCell>แก้ไขข้อมูล</TableCell>\r\n//             <TableCell>ลบข้อมูล</TableCell>\r\n//           </TableRow>\r\n//         </TableHead>\r\n//         <TableBody>\r\n//           {items.map((row) => (\r\n//             <TableRow\r\n//               key={row.name}\r\n//               sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n//             >\r\n//               <TableCell >{row.USER_FULLNAME}</TableCell>\r\n//               <TableCell >{row.MOTORCYCLE_BUCKET_NUMBER}</TableCell>\r\n//               <TableCell >{row.MOTORCYCLE_REGISTRATION_NUMBER}</TableCell>\r\n//               <TableCell ><Button type=\"button\" class=\"btn btn-success \" onClick={()=>MotorcycleUpdate(row.MOTORCYCLE_ID)}>รายละเอียด</Button></TableCell>\r\n//               <TableCell ><Button type=\"button\" class=\"btn btn-warning\" onClick={()=>MotorcycleUpdate(row.MOTORCYCLE_ID)}>แก้ไข</Button></TableCell>\r\n//               <TableCell ><Button type=\"button\" class=\"btn btn-danger\" onClick={()=>MotorcycleDelete(row.MOTORCYCLE_ID)}>ลบ</Button></TableCell>\r\n//             </TableRow>\r\n//           ))}\r\n//         </TableBody>\r\n//       </Table>\r\n// </div>  \r\n//     </React.Fragment> }\r\n//     </div>\r\n  \r\n//   );\r\n// }\r\n\r\n// export default MotorcycleInfoAdmin;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}